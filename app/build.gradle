apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

/*********************Kotlin plugin*****************************************/
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' //kapt improvement for kotlin 1.0.6
/*********************End Kotlin plugin*****************************************/

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "org.pb.interview"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'LICENSE.txt' // http://www.vogella.com/tutorials/AndroidTesting/article.html
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/com.cnr.phr_android'
        test.java.srcDirs += 'src/test/kotlin'
    }
    testOptions{
        unitTests.returnDefaultValues = true
    }
}

kapt {
    generateStubs = true
}
ext {
    supportLibVersion = '25.2.0'
    retrofitVersion = '2.1.0'
    daggerVersion = '2.6.1'
    rxjavaVersion = '2.0.1'
    espressoVersion = '2.2.2'
    mockitoVersion = '2.6.8'
    mockitoKotlinVersion ='1.2.0'
    assertjVersion = '2.6.0' // for java 7
    uiAutomatorVersion = '2.1.1'
    roboletricVersion = '3.2.2'
}

dependencies {

    /*********************Test Library Dependencies*****************************************/
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Optional if you need to detect intents.
    androidTestCompile("com.android.support.test.espresso:espresso-intents:${espressoVersion}")
    testCompile 'junit:junit:4.12'

    //mockito
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile "org.mockito:mockito-android:$mockitoVersion" //allow mockito to generate class in android virtual machine
    //helper functions to work with Mockito in Kotlin. (e.g. whenever())
    testCompile "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    androidTestCompile "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"


    //assertJ (assertThat())
    testCompile "org.assertj:assertj-core:$assertjVersion"
    androidTestCompile "org.assertj:assertj-core:$assertjVersion"

    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    //uiautomator
    androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$uiAutomatorVersion"


    /**********************End of Test Library Dependencies*******************************/

    /*********************Support Library Dependencies*****************************************/
    compile "com.android.support:appcompat-v7:$supportLibVersion"

    //design-support-library (material ui and animation)
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile "com.android.support:support-vector-drawable:$supportLibVersion"
    compile "com.android.support:animated-vector-drawable:$supportLibVersion"

    //constraint layout
    compile 'com.android.support.constraint:constraint-layout:1.0.0'

    /**********************End of Support Library Dependencies*******************************/

    //kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    kapt "com.android.databinding:compiler:$gradle_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //dagger
    compile "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'//log (https://futurestud.io/tutorials/retrofit-2-log-requests-and-responses)
    //OkHttp
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okio:okio:1.7.0'
    //Gson
    compile 'com.google.code.gson:gson:2.8.0'
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

    //rxJava
    compile "io.reactivex.rxjava2:rxandroid:${rxjavaVersion}"
    compile "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //image provider
    compile 'com.cloudinary:cloudinary-android:1.2.2'
    compile 'com.squareup.picasso:picasso:2.5.2'


//    compile 'com.github.satoshun:RxWebView:1.0.0' //TODO may use
}
repositories {
    mavenCentral()
}
